{"version":3,"sources":["components/formatters/NumericFormatterBase.js","components/formatters/DecimalFormatter.js","../../../../src/php/strings/number_format.js"],"names":["NumericFormatterBase","items","formatter","settings","map","item","i","prefixes","suffixes","prefix_suffix","prefix","length","suffix","key","DecimalFormatter","numberFormat","require","newItems","value","scale","decimal_separator","thousand_separator","module","number","n","isFinite","prec","Math","sep","thousandsSep","dec","decPoint","s","arr","sig","toFixedFix","Array"],"mappings":"6LAkBeA,MAhBc,EAAGC,QAAOC,YAAWC,cAE1CF,EAAMG,IAAI,CAACC,EAAMC,KACb,IAAIC,EAAW,GACXC,EAAW,GAKf,OAJIN,EAAUC,SAASM,gBACnBF,EAAWJ,EAASO,OAAOC,OAASR,EAASO,OAAS,GACtDF,EAAWL,EAASS,OAAOD,OAASR,EAASS,OAAS,IAGtD,yBAAKC,IAAKP,GAAV,UAAiBC,GAAjB,OAA4BF,GAA5B,OAAmCG,MCCpCM,UAVU,EAAGb,QAAOC,YAAWC,eAC1C,MAAMY,EAAeC,EAAQ,IACvBC,EAAWhB,EAAMG,IAAKc,GACjBH,EAAaG,EAAOhB,EAAUC,SAASgB,MAAOjB,EAAUC,SAASiB,kBAAmBlB,EAAUC,SAASkB,qBAElH,OACI,kBAAC,EAAD,CAAsBpB,MAAOgB,EAAUf,UAAWA,EAAWC,SAAUA,M,gCCT/EmB,EAAOA,QAAU,kBAmDfC,GAAUA,EAAD,4BAATA,IACA,IAAIC,EAAKC,UAAD,IAAR,EAAQ,EACJC,EAAQD,UAAD,GAA2BE,KAAKA,IAA3C,GAAW,EACPC,EAAM,qBAAQC,EAAR,IAAV,EACIC,EAAM,qBAAQC,EAAR,IAAV,EACIC,EAAJ,GAyBA,OATAA,GAAKN,EAdY,cACf,SAAK,GAAD,gBACF,QAASC,KAAKA,MAAMH,EAAIA,KAAfG,QAAT,GAEA,IAAIM,GAAO,GAAD,SAAV,KACIC,EAAJ,GAIA,OAHKD,EAAD,KAAJ,IACEC,UAEQP,KAAKA,OAAOM,EAAD,WAAwBA,EAAD,GAAlCN,SAAH,YAAP,GAKQQ,CAAWA,EAAGA,GAArBT,WAAwC,GAAKC,KAAKA,MAAnD,UAAJK,MACMA,GAAGA,OAAT,IACEA,KAAOA,EAAEA,GAAGA,QAAQA,0BAApBA,KAEGA,EAAEA,IAAH,WAAJ,IACEA,KAAOA,EAAEA,IAATA,GACAA,MAAQ,IAAII,MAAMV,EAAOM,EAAEA,GAATN,OAAV,QAARM,MAGKA,EAAEA,KAAT","file":"static/js/5.4bb7a658.chunk.js","sourcesContent":["import React from 'react';\n\nconst NumericFormatterBase = ({ items, formatter, settings }) => {\n    return (\n        items.map((item, i) => {\n            let prefixes = '';\n            let suffixes = '';\n            if (formatter.settings.prefix_suffix) {\n                prefixes = settings.prefix.length ? settings.prefix : '';\n                suffixes = settings.suffix.length ? settings.suffix : ''\n            }\n            return (\n                <div key={i}>{`${prefixes}${item}${suffixes}`}</div>\n            );\n        })\n    )\n}\n\nexport default NumericFormatterBase;","import React from 'react';\nimport NumericFormatterBase from './NumericFormatterBase';\n\nconst DecimalFormatter = ({ items, formatter, settings }) => {\n    const numberFormat = require('locutus/php/strings/number_format');\n    const newItems = items.map((value) => {\n        return numberFormat(value, formatter.settings.scale, formatter.settings.decimal_separator, formatter.settings.thousand_separator);\n    });\n    return (\n        <NumericFormatterBase items={newItems} formatter={formatter} settings={settings} />\n    )\n}\n\nexport default DecimalFormatter;","module.exports = function number_format (number, decimals, decPoint, thousandsSep) { // eslint-disable-line camelcase\n  //  discuss at: https://locutus.io/php/number_format/\n  // original by: Jonas Raoni Soares Silva (https://www.jsfromhell.com)\n  // improved by: Kevin van Zonneveld (https://kvz.io)\n  // improved by: davook\n  // improved by: Brett Zamir (https://brett-zamir.me)\n  // improved by: Brett Zamir (https://brett-zamir.me)\n  // improved by: Theriault (https://github.com/Theriault)\n  // improved by: Kevin van Zonneveld (https://kvz.io)\n  // bugfixed by: Michael White (https://getsprink.com)\n  // bugfixed by: Benjamin Lupton\n  // bugfixed by: Allan Jensen (https://www.winternet.no)\n  // bugfixed by: Howard Yeend\n  // bugfixed by: Diogo Resende\n  // bugfixed by: Rival\n  // bugfixed by: Brett Zamir (https://brett-zamir.me)\n  //  revised by: Jonas Raoni Soares Silva (https://www.jsfromhell.com)\n  //  revised by: Luke Smith (https://lucassmith.name)\n  //    input by: Kheang Hok Chin (https://www.distantia.ca/)\n  //    input by: Jay Klehr\n  //    input by: Amir Habibi (https://www.residence-mixte.com/)\n  //    input by: Amirouche\n  //   example 1: number_format(1234.56)\n  //   returns 1: '1,235'\n  //   example 2: number_format(1234.56, 2, ',', ' ')\n  //   returns 2: '1 234,56'\n  //   example 3: number_format(1234.5678, 2, '.', '')\n  //   returns 3: '1234.57'\n  //   example 4: number_format(67, 2, ',', '.')\n  //   returns 4: '67,00'\n  //   example 5: number_format(1000)\n  //   returns 5: '1,000'\n  //   example 6: number_format(67.311, 2)\n  //   returns 6: '67.31'\n  //   example 7: number_format(1000.55, 1)\n  //   returns 7: '1,000.6'\n  //   example 8: number_format(67000, 5, ',', '.')\n  //   returns 8: '67.000,00000'\n  //   example 9: number_format(0.9, 0)\n  //   returns 9: '1'\n  //  example 10: number_format('1.20', 2)\n  //  returns 10: '1.20'\n  //  example 11: number_format('1.20', 4)\n  //  returns 11: '1.2000'\n  //  example 12: number_format('1.2000', 3)\n  //  returns 12: '1.200'\n  //  example 13: number_format('1 000,50', 2, '.', ' ')\n  //  returns 13: '100 050.00'\n  //  example 14: number_format(1e-8, 8, '.', '')\n  //  returns 14: '0.00000001'\n\n  number = (number + '').replace(/[^0-9+\\-Ee.]/g, '')\n  var n = !isFinite(+number) ? 0 : +number\n  var prec = !isFinite(+decimals) ? 0 : Math.abs(decimals)\n  var sep = (typeof thousandsSep === 'undefined') ? ',' : thousandsSep\n  var dec = (typeof decPoint === 'undefined') ? '.' : decPoint\n  var s = ''\n\n  var toFixedFix = function (n, prec) {\n    if (('' + n).indexOf('e') === -1) {\n      return +(Math.round(n + 'e+' + prec) + 'e-' + prec)\n    } else {\n      var arr = ('' + n).split('e')\n      var sig = ''\n      if (+arr[1] + prec > 0) {\n        sig = '+'\n      }\n      return (+(Math.round(+arr[0] + 'e' + sig + (+arr[1] + prec)) + 'e-' + prec)).toFixed(prec)\n    }\n  }\n\n  // @todo: for IE parseFloat(0.55).toFixed(0) = 0;\n  s = (prec ? toFixedFix(n, prec).toString() : '' + Math.round(n)).split('.')\n  if (s[0].length > 3) {\n    s[0] = s[0].replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, sep)\n  }\n  if ((s[1] || '').length < prec) {\n    s[1] = s[1] || ''\n    s[1] += new Array(prec - s[1].length + 1).join('0')\n  }\n\n  return s.join(dec)\n}\n"],"sourceRoot":""}